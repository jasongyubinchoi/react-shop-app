{"ast":null,"code":"import _slicedToArray from \"/Users/jasonchoi/Downloads/2022Spring/ECE4723/nailNetGitRepo/react-shop-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jasonchoi/Downloads/2022Spring/ECE4723/nailNetGitRepo/react-shop-app/client/src/components/views/LandingPage/Sections/CheckBox.js\";\nimport React, { useState } from 'react';\nimport { Checkbox, Collapse } from 'antd';\nimport { Icon, Col, Card, Row } from \"antd\";\nconst Panel = Collapse.Panel;\n\nfunction CheckBox(props) {\n  const renderCheckboxLists = () => props.list && props.list.map((value, index) => React.createElement(React.Fragment, {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    onChange: () => handleToggle(value.id),\n    type: \"checkbox\",\n    checked: Checked.indexOf(value.id) === -1 ? false : true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, value.name)));\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        Checked = _useState2[0],\n        setChecked = _useState2[1];\n\n  const handleToggle = value => {\n    const currentIndex = Checked.indexOf(value);\n    const newChecked = [...Checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    props.handleFilters(newChecked);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Collapse, {\n    defaultActiveKey: ['0'],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Panel, {\n    header: props.title,\n    key: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, renderCheckboxLists())));\n}\n\nexport default CheckBox;","map":{"version":3,"sources":["/Users/jasonchoi/Downloads/2022Spring/ECE4723/nailNetGitRepo/react-shop-app/client/src/components/views/LandingPage/Sections/CheckBox.js"],"names":["React","useState","Checkbox","Collapse","Icon","Col","Card","Row","Panel","CheckBox","props","renderCheckboxLists","list","map","value","index","handleToggle","id","Checked","indexOf","name","setChecked","currentIndex","newChecked","push","splice","handleFilters","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,MAAnC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,MAArC;MACQC,K,GAAUL,Q,CAAVK,K;;AAGR,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAMC,mBAAmB,GAAG,MAAMD,KAAK,CAACE,IAAN,IAAcF,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAe,CAACC,KAAD,EAAOC,KAAP,KAC7D,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAGA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACA,IAAA,QAAQ,EAAI,MAAIC,YAAY,CAACF,KAAK,CAACG,EAAP,CAD5B;AAEA,IAAA,IAAI,EAAG,UAFP;AAGA,IAAA,OAAO,EAAIC,OAAO,CAACC,OAAR,CAAgBL,KAAK,CAACG,EAAtB,MAA8B,CAAC,CAA/B,GAAmC,KAAnC,GAA2C,IAHtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,KAAK,CAACM,IAAb,CANJ,CAD8C,CAAhD;;AADqB,oBAYOnB,QAAQ,CAAC,EAAD,CAZf;AAAA;AAAA,QAYhBiB,OAZgB;AAAA,QAYPG,UAZO;;AAavB,QAAML,YAAY,GAAIF,KAAD,IAAW;AAC7B,UAAMQ,YAAY,GAAEJ,OAAO,CAACC,OAAR,CAAgBL,KAAhB,CAApB;AACA,UAAMS,UAAU,GAAG,CAAC,GAAGL,OAAJ,CAAnB;;AACA,QAAII,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBC,MAAAA,UAAU,CAACC,IAAX,CAAgBV,KAAhB;AACD,KAFD,MAEO;AACLS,MAAAA,UAAU,CAACE,MAAX,CAAkBH,YAAlB,EAA+B,CAA/B;AACD;;AACDD,IAAAA,UAAU,CAACE,UAAD,CAAV;AACAb,IAAAA,KAAK,CAACgB,aAAN,CAAoBH,UAApB;AACF,GAVD;;AAYE,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AAAU,IAAA,gBAAgB,EAAI,CAAC,GAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAIb,KAAK,CAACiB,KAAvB;AAA8B,IAAA,GAAG,EAAG,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACChB,mBAAmB,EADpB,CADJ,CADA,CADJ;AAUH;;AAED,eAAeF,QAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Checkbox, Collapse } from 'antd';\nimport { Icon, Col, Card, Row } from \"antd\";\nconst { Panel } = Collapse\n\n\nfunction CheckBox(props) {\n    const renderCheckboxLists = () => props.list && props.list.map((value,index) => (\n      <React.Fragment key ={index}>\n          <Checkbox \n          onChange = {()=>handleToggle(value.id)}\n          type = \"checkbox\"\n          checked = {Checked.indexOf(value.id) === -1 ? false : true}\n          />\n          <span>{value.name}</span>\n          </React.Fragment>\n          )\n  )\n  const [Checked, setChecked] = useState([])\n  const handleToggle = (value) => {\n     const currentIndex =Checked.indexOf(value);\n     const newChecked = [...Checked]\n     if (currentIndex === -1) {\n       newChecked.push(value)\n     } else {\n       newChecked.splice(currentIndex,1)\n     }\n     setChecked(newChecked);\n     props.handleFilters(newChecked)\n  }\n\n    return (\n        <div>\n        <Collapse defaultActiveKey = {['0']} >\n            <Panel header = {props.title} key = \"1\">\n            {renderCheckboxLists()}\n            </Panel>\n        \n        </Collapse>\n    </div>\n    )\n}\n\nexport default CheckBox\n"]},"metadata":{},"sourceType":"module"}